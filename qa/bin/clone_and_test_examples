#!/usr/bin/env bash

set -e

test_on_branch () {
  printf "%s" "$1" | grep --extended "^(master$|channel/)" >/dev/null
}

if [ -n "$QA" ] || test_on_branch $CIRCLE_BRANCH; then
  echo "Starting QA"

  examples="$(pwd)/$1"
  image_name="$2"
  config_template_path="$(pwd)/$1/../config.template.json"
  config_path="$examples/config.json"
  mkdir -p "$examples"
  cd "$examples"

  REPOS_PER_LANGUAGE=20

  if [ -n "$LANGUAGE" ]; then
    LANGS[0]="$LANGUAGE"
  else
    LANGS[0]="ruby"
    LANGS[1]="python"
    LANGS[2]="php"
    LANGS[3]="java"
    LANGS[4]="javascript"
  fi

  for lang in ${LANGS[*]}; do
    printf "$(cat "$config_template_path")" "$lang" > "$config_path"

    curl -G https://api.github.com/search/repositories \
        --data-urlencode "sort=stars" \
        --data-urlencode "per_page=$REPOS_PER_LANGUAGE" \
        --data-urlencode "order=desc" \
        --data-urlencode "q=language:$lang" | \
        jq --raw-output '.items | map(.full_name) | .[]' | \
        while read github_slug; do
          repo="$lang/$github_slug"

          if [ -d "$repo" ]; then
            printf "pulling %s (%s)\n" "$github_slug" "$lang"
            cd "$repo"
            git pull
            cd "$examples"
          else
            printf "cloning %s (%s)\n" "$github_slug" "$lang"
            mkdir -p "$repo"
            git clone --depth 1 "git@github.com:$github_slug.git" "$repo"
          fi

          printf "Analyzing %s\n" "$repo"
          cd "$repo"
          docker run --rm --volume "$config_path:/config.json" --volume $(pwd):/code "$image_name" >/dev/null
          cd "$examples"
        done
  done
else
  echo "Skipping QA"
fi
